{"ast":null,"code":"var _jsxFileName = \"F:\\\\spring-boot-security-jwt-react-postgresql\\\\react-front-end\\\\src\\\\components\\\\loginComponents\\\\container.component.tsx\";\nimport React from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport { Roles } from '../../constants/roles.enum';\nimport { Routes } from '../../constants/routes.enum';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { UserService } from '../../services/user.service';\nimport '../../styles/container-component.style.css';\nimport { Util } from '../../utils/Util';\nimport { HomeComponent } from './home.component';\nimport { LoginComponent } from './login.component';\nimport { RegistrationComponent } from './registration.component';\nimport { UserComponent } from './user.component';\nimport { ListEmployeeComponent } from '../employeeComponents/ListEmployeeComponent';\nimport { EmployeeService } from '../../services/EmployeeService/employer.service';\nexport class ContainerComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authenticationService = void 0;\n    this.userService = void 0;\n    this.employeeService = void 0;\n\n    this.logOut = () => {\n      this.authenticationService.logout();\n    };\n\n    this.refreshData = () => {\n      Util.refreshData(this.userService, this.setUsername, this.setRoles);\n    };\n\n    this.setUsername = username => {\n      this.setState({\n        currentUsername: username\n      });\n    };\n\n    this.setEmployeeData = () => {\n      this.setState(employeeService.ge);\n    };\n\n    this.setRoles = roles => {\n      if (roles && roles.length > 0) {\n        const roleNames = roles.map(role => role.name);\n        const isCurrentUserAdmin = roleNames.includes(Roles.ROLE_ADMIN.toString());\n\n        if (isCurrentUserAdmin) {\n          this.setState({\n            showAdminButton: true\n          });\n        }\n      } else if (this.state.showAdminButton) {\n        this.setState({\n          showAdminButton: false\n        });\n      }\n    };\n\n    this.authenticationService = new AuthenticationService();\n    this.userService = new UserService();\n    this.employeeService = new EmployeeService();\n    this.state = {\n      currentUsername: '',\n      showAdminButton: false\n    };\n  }\n\n  componentDidMount() {\n    this.refreshData();\n  }\n\n  render() {\n    const {\n      currentUsername,\n      showAdminButton\n    } = this.state;\n    const isCurrentUserExists = currentUsername !== undefined && currentUsername !== '';\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"menubar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: Routes.ROOT,\n      className: \"menu-item brand-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"BenBal\"), /*#__PURE__*/React.createElement(Link, {\n      to: Routes.HOME,\n      className: \"menu-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, \"Home\"), showAdminButton && /*#__PURE__*/React.createElement(Link, {\n      to: Routes.ADMIN,\n      className: \"menu-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Admin\"), isCurrentUserExists && /*#__PURE__*/React.createElement(Link, {\n      to: Routes.USER,\n      className: \"menu-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"User\"), isCurrentUserExists && /*#__PURE__*/React.createElement(Link, {\n      to: Routes.EMPLOYEE,\n      className: \"menu-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Employees\")), isCurrentUserExists ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: Routes.USER,\n      className: \"menu-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, currentUsername), /*#__PURE__*/React.createElement(\"a\", {\n      href: Routes.LOGIN,\n      className: \"menu-item\",\n      onClick: this.logOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, \"LogOut\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: Routes.LOGIN,\n      className: \"menu-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n      to: Routes.REGISTER,\n      className: \"menu-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, \"Sign Up\"))), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: [Routes.ROOT, Routes.HOME],\n      component: HomeComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: Routes.LOGIN,\n      component: LoginComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: Routes.REGISTER,\n      component: RegistrationComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: Routes.USER,\n      render: routerProps => /*#__PURE__*/React.createElement(UserComponent, {\n        history: [],\n        setUsername: this.setUsername,\n        setRoles: this.setRoles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: Routes.EMPLOYEE,\n      render: routerProps => /*#__PURE__*/React.createElement(ListEmployeeComponent, {\n        setEmployeeData: this.setEmployeeData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 12\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["F:/spring-boot-security-jwt-react-postgresql/react-front-end/src/components/loginComponents/container.component.tsx"],"names":["React","BrowserRouter","Router","Link","Route","Switch","Roles","Routes","AuthenticationService","UserService","Util","HomeComponent","LoginComponent","RegistrationComponent","UserComponent","ListEmployeeComponent","EmployeeService","ContainerComponent","Component","constructor","props","authenticationService","userService","employeeService","logOut","logout","refreshData","setUsername","setRoles","username","setState","currentUsername","setEmployeeData","ge","roles","length","roleNames","map","role","name","isCurrentUserAdmin","includes","ROLE_ADMIN","toString","showAdminButton","state","componentDidMount","render","isCurrentUserExists","undefined","ROOT","HOME","ADMIN","USER","EMPLOYEE","LOGIN","REGISTER","routerProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\r\nimport { Roles } from '../../constants/roles.enum'\r\nimport { Routes } from '../../constants/routes.enum'\r\nimport { Role } from '../../models/role.model'\r\nimport { AuthenticationService } from '../../services/authentication.service'\r\nimport { UserService } from '../../services/user.service'\r\n\r\nimport '../../styles/container-component.style.css'\r\nimport { Util } from '../../utils/Util'\r\n\r\n\r\nimport { HomeComponent } from './home.component'\r\nimport { LoginComponent } from './login.component'\r\nimport { RegistrationComponent } from './registration.component'\r\nimport { UserComponent } from './user.component'\r\nimport { ListEmployeeComponent } from '../employeeComponents/ListEmployeeComponent'\r\nimport { EmployeeService } from '../../services/EmployeeService/employer.service'\r\nimport { EmployeesData } from '../../models/employees.data.model'\r\nexport interface ContainerComponentProps {\r\n}\r\n\r\nexport interface ContainerComponentStates {\r\n  currentUsername: string,\r\n  employeesDate : EmployeesData\r\n  showAdminButton: boolean\r\n}\r\n\r\nexport class ContainerComponent\r\n  extends React.Component <ContainerComponentProps, ContainerComponentStates> {\r\n\r\n  authenticationService\r\n  userService\r\n  employeeService\r\n\r\n  constructor(props: ContainerComponentProps) {\r\n    super(props)\r\n    this.authenticationService = new AuthenticationService()\r\n    this.userService = new UserService()\r\n    this.employeeService = new EmployeeService();\r\n    this.state = {\r\n      currentUsername: '',\r\n      showAdminButton: false\r\n    }\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    this.refreshData()\r\n  }\r\n\r\n  logOut = () => {\r\n    this.authenticationService.logout()\r\n  }\r\n\r\n  refreshData = () => {\r\n    Util.refreshData(this.userService, this.setUsername, this.setRoles)\r\n  }\r\n\r\n  setUsername = (username: string) => {\r\n    this.setState({currentUsername: username})\r\n  }\r\n  setEmployeeData = ()=>{\r\n    this.setState(employeeService.ge)\r\n  }\r\n  setRoles = (roles: Role[]) => {\r\n    if (roles && roles.length > 0) {\r\n      const roleNames: string[] = roles.map((role: Role) => role.name)\r\n      const isCurrentUserAdmin: boolean =\r\n        roleNames.includes(Roles.ROLE_ADMIN.toString())\r\n      if (isCurrentUserAdmin) {\r\n        this.setState({showAdminButton: true})\r\n      }\r\n    } else if (this.state.showAdminButton) {\r\n      this.setState({showAdminButton: false})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentUsername,\r\n      showAdminButton\r\n    } = this.state\r\n    const isCurrentUserExists: boolean = currentUsername !== undefined && currentUsername !== ''\r\n\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <nav className=\"menubar\">\r\n            <div className=\"menu-left\">\r\n              <Link\r\n                to={Routes.ROOT}\r\n                className=\"menu-item brand-link\"\r\n\r\n              >\r\n                BenBal\r\n              </Link>\r\n              <Link\r\n                to={Routes.HOME}\r\n                className=\"menu-item\"\r\n              >\r\n                Home\r\n              </Link>\r\n\r\n              {\r\n                showAdminButton &&\r\n\r\n                <Link\r\n                  to={Routes.ADMIN}\r\n                  className=\"menu-item\"\r\n                >\r\n                  Admin\r\n                </Link>\r\n              }\r\n\r\n              {\r\n                isCurrentUserExists &&\r\n\r\n                <Link\r\n                  to={Routes.USER}\r\n                  className=\"menu-item\"\r\n                >\r\n                  User\r\n                </Link>\r\n              }\r\n               {\r\n                isCurrentUserExists &&\r\n\r\n                <Link\r\n                  to={Routes.EMPLOYEE}\r\n                  className=\"menu-item\"\r\n                >\r\n                  Employees\r\n                </Link>\r\n              }\r\n            </div>\r\n\r\n            {\r\n              isCurrentUserExists ?\r\n\r\n                <div className=\"menu-right\">\r\n                  <Link\r\n                    to={Routes.USER}\r\n                    className=\"menu-item\"\r\n                  >\r\n                    {currentUsername}\r\n                  </Link>\r\n                  <a\r\n                    href={Routes.LOGIN}\r\n                    className=\"menu-item\"\r\n                    onClick={this.logOut}\r\n                  >\r\n                    LogOut\r\n                  </a>\r\n                </div>\r\n\r\n                :\r\n\r\n                <div className=\"menu-right\">\r\n                  <Link\r\n                    to={Routes.LOGIN}\r\n                    className=\"menu-item\"\r\n                  >\r\n                    Login\r\n                  </Link>\r\n                  <Link\r\n                    to={Routes.REGISTER}\r\n                    className=\"menu-item\"\r\n                  >\r\n                    Sign Up\r\n                  </Link>\r\n                </div>\r\n            }\r\n          </nav>\r\n\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={[Routes.ROOT, Routes.HOME]}\r\n              component={HomeComponent}\r\n            />\r\n            <Route\r\n              exact\r\n              path={Routes.LOGIN}\r\n              component={LoginComponent}\r\n            />\r\n            <Route\r\n              exact\r\n              path={Routes.REGISTER}\r\n              component={RegistrationComponent}\r\n            />\r\n            <Route\r\n              path={Routes.USER}\r\n              render={routerProps => (\r\n                <UserComponent\r\n                  history={[]}\r\n                  setUsername={this.setUsername}\r\n                  setRoles={this.setRoles}\r\n                />\r\n              )}\r\n            />\r\n           <Route\r\n              path={Routes.EMPLOYEE}\r\n              render={routerProps => (\r\n                <ListEmployeeComponent\r\n                 \r\n                  setEmployeeData={this.setEmployeeData}\r\n                  \r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
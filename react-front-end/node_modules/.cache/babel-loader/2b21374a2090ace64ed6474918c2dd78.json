{"ast":null,"code":"var _jsxFileName = \"F:\\\\spring-boot-security-jwt-react-postgresql\\\\react-front-end\\\\src\\\\components\\\\employeeComponents\\\\ListEmployeeComponent.tsx\";\nimport * as React from 'react';\nimport { EmployeeService } from '../../services/employeeservice/employer.service';\nimport { Util } from '../../utils/Util';\nimport { Constants } from '../../constants/constants';\nexport class ListEmployeeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.employerService = void 0;\n    this.employerService = new EmployeeService();\n    this.state = {\n      employeesDataState: {\n        employeesData: [{\n          id: 0,\n          firstName: '',\n          lastName: '',\n          emailId: ''\n        }]\n      }\n    }; // this.addEmployee = this.addEmployee.bind(this);\n    // this.editEmployee = this.editEmployee.bind(this);\n    // this.deleteEmployee = this.deleteEmployee.bind(this);\n  } // deleteEmployee(id){\n  //     EmployeeService.deleteEmployee(id).then( res => {\n  //         this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\n  //     });\n  // }\n  // viewEmployee(id){\n  //     this.props.history.push(`/view-employee/${id}`);\n  // }\n  // editEmployee(id){\n  //     this.props.history.push(`/add-employee/${id}`);\n  // }\n\n\n  componentDidMount() {\n    let loginResponse = Util.getParsedDataFromLocalStorage(Constants.LOCAL_STORAGE_EMPLOYE_DATA);\n\n    if (loginResponse) {\n      this.employerService.getEmployees().then(res => {\n        const employeeData = res.data;\n        alert(JSON.stringify(employeeData));\n\n        if (employeeData) {\n          this.setState({\n            employeesDataState: employeeData\n          });\n        }\n      });\n    }\n  } // addEmployee(){\n  //     this.props.history.push('/add-employee/_adds');\n  // }\n\n\n  render() {\n    const {\n      employeesDataState\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }\n    }, \"Employees Lissst\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped table-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, \" Employee First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, \" Employee Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }, \" Employee Email Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, \" Actions\"))), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 31\n      }\n    }, employeesDataState.employeesData.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n      key: employee.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 46\n      }\n    }, \" \", employee.firstName, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 46\n      }\n    }, \" \", employee.lastName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 46\n      }\n    }, \" \", employee.emailId), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 46\n      }\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["F:/spring-boot-security-jwt-react-postgresql/react-front-end/src/components/employeeComponents/ListEmployeeComponent.tsx"],"names":["React","EmployeeService","Util","Constants","ListEmployeeComponent","Component","constructor","props","employerService","state","employeesDataState","employeesData","id","firstName","lastName","emailId","componentDidMount","loginResponse","getParsedDataFromLocalStorage","LOCAL_STORAGE_EMPLOYE_DATA","getEmployees","then","res","employeeData","data","alert","JSON","stringify","setState","render","map","employee"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport {EmployeeService } from '../../services/employeeservice/employer.service';\r\nimport { LoginResponse } from '../../models/login-response.model'\r\nimport { Util } from '../../utils/Util'\r\nimport { Constants } from '../../constants/constants'\r\nimport { EmployeesData } from '../../models/employees.data.model';\r\n\r\n\r\n interface EmployeeStates {\r\n    employeesDataState:EmployeesData\r\n  }\r\n  interface EmployeeProps{\r\n    \r\n    setEmployeeData: (employees: EmployeesData) => void\r\n   \r\n }\r\n\r\n export class ListEmployeeComponent  extends React.Component<EmployeeProps,EmployeeStates>  {\r\n    employerService\r\n  \r\n    constructor(props:EmployeeProps) {\r\n       \r\n        super(props)\r\n        this.employerService = new EmployeeService();\r\n       this.state ={ employeesDataState:{ employeesData :[{\r\n        id: 0,\r\n\r\n        firstName: '',\r\n\r\n        lastName: '',\r\n\r\n         emailId: ''\r\n    }]}}\r\n    \r\n        // this.addEmployee = this.addEmployee.bind(this);\r\n        // this.editEmployee = this.editEmployee.bind(this);\r\n        // this.deleteEmployee = this.deleteEmployee.bind(this);\r\n    }\r\n\r\n    // deleteEmployee(id){\r\n    //     EmployeeService.deleteEmployee(id).then( res => {\r\n    //         this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\r\n    //     });\r\n    // }\r\n    // viewEmployee(id){\r\n    //     this.props.history.push(`/view-employee/${id}`);\r\n    // }\r\n    // editEmployee(id){\r\n    //     this.props.history.push(`/add-employee/${id}`);\r\n    // }\r\n  \r\n    componentDidMount(): void {\r\n        let loginResponse: LoginResponse = Util.getParsedDataFromLocalStorage(Constants.LOCAL_STORAGE_EMPLOYE_DATA)\r\n        if (loginResponse) {\r\n            this.employerService.getEmployees().then((res: { data: any; }) => {\r\n          \r\n            const employeeData : EmployeesData = res.data;\r\n            alert(JSON.stringify(employeeData))\r\n            if(employeeData){\r\n                this.setState({ employeesDataState: employeeData});\r\n            }\r\n            \r\n        });\r\n    }\r\n    }\r\n\r\n    // addEmployee(){\r\n    //     this.props.history.push('/add-employee/_adds');\r\n    // }\r\n\r\n    render(): React.ReactNode {\r\n        const {employeesDataState} = this.state\r\n        return (\r\n            <div>\r\n                 <h2 className=\"text-center\">Employees Lissst</h2>\r\n                 <div className = \"row\">\r\n                    {/* <button className=\"btn btn-primary\" onClick={this.addEmployee}> Add Employee</button> */}\r\n                 </div>\r\n                 <br></br>\r\n                 <div className = \"row\">\r\n                        <table className = \"table table-striped table-bordered\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> Employee First Name</th>\r\n                                    <th> Employee Last Name</th>\r\n                                    <th> Employee Email Id</th>\r\n                                    <th> Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <React.Fragment>\r\n                            { <tbody>\r\n                                {\r\n                                    employeesDataState.employeesData.map(\r\n                                        employee => \r\n                                        <tr key = {employee.id}>\r\n                                             <td> { employee.firstName} </td>   \r\n                                             <td> {employee.lastName}</td>\r\n                                             <td> {employee.emailId}</td>\r\n                                             <td>\r\n                                                 {/* <button onClick={ () => this.editEmployee(employee.id)} className=\"btn btn-info\">Update </button> */}\r\n                                                 {/* <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteEmployee(employee.id)} className=\"btn btn-danger\">Delete </button> */}\r\n                                                 {/* <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewEmployee(employee.id)} className=\"btn btn-info\">View </button>*/}\r\n                                             </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody> }\r\n                            </React.Fragment>\r\n                        </table>\r\n\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
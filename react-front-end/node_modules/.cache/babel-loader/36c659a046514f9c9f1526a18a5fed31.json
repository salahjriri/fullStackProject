{"ast":null,"code":"import axios from 'axios';\nimport { Util } from '../utils/Util';\nimport { AuthorizationService } from './authorization.service';\nexport class UserService {\n  constructor() {\n    this.urls = void 0;\n    this.urls = Util.getUrls();\n  }\n\n  getPublicContent() {\n    const url = `${this.getUrlStart()}${this.urls.getPublicContent}`;\n    return axios.get(url);\n  }\n\n  getUserDetails(userId) {\n    const url = `${this.getUrlStart()}${this.urls.getUserDetails}/${userId}`;\n    return axios.get(url, {\n      headers: AuthorizationService.getAuthorizationHeader()\n    });\n  }\n\n  getAdminInformation() {\n    const url = `${this.getUrlStart()}${this.urls.getAdminData}`;\n    return axios.get(url, {\n      headers: AuthorizationService.getAuthorizationHeader()\n    });\n  }\n\n  getUrlStart() {\n    return this.urls.host + this.urls.apiRoot;\n  }\n\n}","map":{"version":3,"sources":["F:/spring-boot-security-jwt-react-postgresql/react-front-end/src/services/user.service.tsx"],"names":["axios","Util","AuthorizationService","UserService","constructor","urls","getUrls","getPublicContent","url","getUrlStart","get","getUserDetails","userId","headers","getAuthorizationHeader","getAdminInformation","getAdminData","host","apiRoot"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAO,MAAMC,WAAN,CAAkB;AAIvBC,EAAAA,WAAW,GAAG;AAAA,SAFdC,IAEc;AACZ,SAAKA,IAAL,GAAYJ,IAAI,CAACK,OAAL,EAAZ;AACD;;AAEDC,EAAAA,gBAAgB,GAAiB;AAC/B,UAAMC,GAAW,GAAI,GAAE,KAAKC,WAAL,EAAmB,GAAE,KAAKJ,IAAL,CAAUE,gBAAiB,EAAvE;AACA,WAAOP,KAAK,CAACU,GAAN,CAAUF,GAAV,CAAP;AACD;;AAEDG,EAAAA,cAAc,CAACC,MAAD,EAA+B;AAC3C,UAAMJ,GAAW,GAAI,GAAE,KAAKC,WAAL,EAAmB,GAAE,KAAKJ,IAAL,CAAUM,cAAe,IAAGC,MAAO,EAA/E;AACA,WAAOZ,KAAK,CAACU,GAAN,CAAUF,GAAV,EAAe;AAACK,MAAAA,OAAO,EAAEX,oBAAoB,CAACY,sBAArB;AAAV,KAAf,CAAP;AACD;;AAEDC,EAAAA,mBAAmB,GAAiB;AAClC,UAAMP,GAAW,GAAI,GAAE,KAAKC,WAAL,EAAmB,GAAE,KAAKJ,IAAL,CAAUW,YAAa,EAAnE;AACA,WAAOhB,KAAK,CAACU,GAAN,CAAUF,GAAV,EAAe;AAACK,MAAAA,OAAO,EAAEX,oBAAoB,CAACY,sBAArB;AAAV,KAAf,CAAP;AACD;;AAEDL,EAAAA,WAAW,GAAW;AACpB,WAAO,KAAKJ,IAAL,CAAUY,IAAV,GAAiB,KAAKZ,IAAL,CAAUa,OAAlC;AACD;;AAzBsB","sourcesContent":["import axios from 'axios'\r\nimport { Util } from '../utils/Util'\r\nimport { AuthorizationService } from './authorization.service'\r\n\r\nexport class UserService {\r\n\r\n  urls\r\n\r\n  constructor() {\r\n    this.urls = Util.getUrls()\r\n  }\r\n\r\n  getPublicContent(): Promise<any> {\r\n    const url: string = `${this.getUrlStart()}${this.urls.getPublicContent}`\r\n    return axios.get(url)\r\n  }\r\n\r\n  getUserDetails(userId: number): Promise<any> {\r\n    const url: string = `${this.getUrlStart()}${this.urls.getUserDetails}/${userId}`\r\n    return axios.get(url, {headers: AuthorizationService.getAuthorizationHeader()})\r\n  }\r\n\r\n  getAdminInformation(): Promise<any> {\r\n    const url: string = `${this.getUrlStart()}${this.urls.getAdminData}`\r\n    return axios.get(url, {headers: AuthorizationService.getAuthorizationHeader()})\r\n  }\r\n\r\n  getUrlStart(): string {\r\n    return this.urls.host + this.urls.apiRoot\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}